name: Deploy to EC2

on:
  workflow_run:
    workflows: ["Frontend CI", "Backend CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure remote directories exist
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ~/deploy/nginx"

      - name: Upload docker-compose.yml and default.conf
        run: |
          scp -i ~/.ssh/id_rsa compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/deploy/
          scp -i ~/.ssh/id_rsa nginx/default.conf ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/deploy/nginx/

      - name: Generate and upload .env
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env

          scp -i ~/.ssh/id_rsa .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/deploy/

      - name: Deploy with Docker Compose
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/deploy
            docker compose pull
            docker compose up -d
          EOF
